:root {
    --main-text-color: rgb(255, 255, 255);
    --main-bg-color: rgb(255, 255, 255);
    --overlay-text-color: rgb(0, 0, 0);
    --featured-bg-color: rgba(0, 0, 0, .5);
    --section-bg-color: rgba(255, 255, 255, 1);
}

* {
    font-family: 'Roboto', sans-serif;
    scroll-behavior: smooth;
}

body {
    height: 1800px;
    background-color: var(--main-bg-color);
    margin: 0px;
    background-image: url("assets/images/hero_bg.jpg");
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

/* Handles mobile -- set for Main */
.flex-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100vw;
}

.flex-nav {
    font-family: 'Roboto', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
}

.nav-item {
    flex: 0 1 0%;
    list-style: none;
    flex-wrap: wrap;
    padding:15px 30px 5px 30px;
    color: white;
    /* justify-content: space-around; */
}

.nav-item img {
    filter: invert(100%);
    transform: scale(2);
    padding:15px 30px 5px 30px;
}

.hero {
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;
    align-self: center;
    align-items: center;
    justify-content: center;
}

.text h1 {
    margin-top: -200px;
    color: white;
    font-size: 5rem;
    text-align: center;
    max-width: 100%;
}

.text p {
    color: white;
    text-align: center;
    font-size: 2rem;
    padding-top: 2rem;
}

.featured {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    flex: 1 1 0%;
}

.feature {
    background-image: linear-gradient(rgb(69, 166, 179), rgb(0, 0, 0));
    color: white;
    border-radius: .7em;
    min-height: 200px;
    width: 100%;
    padding: 15px;
    flex: 1 0 0%;
    margin: 40px;
    justify-content: center;
    align-items: center;
}

h1 {
    margin-top: 10px;
    font-size: 200%;
}

.feature-title {
    text-align: center;
}

.feature-text {
    margin-top: 10px;
}

.about {
    background-image: linear-gradient(rgb(69, 166, 179), rgb(0, 0, 0));
    border-top: 2px solid white;
    position: relative;
    justify-content: space;
    align-items: center;
    display: flex;
    /* margin: auto; */
}

.about img {
    filter: invert(100%);
    position: relative;
    /* flex: 1 1 0%; */
}

.whatIDo {
    padding-top: 10px;
    /* max-width: 50%; */
    /* float: left; */
}

.whatIDoList {
    list-style: circle;
    list-style-position: inside;
    padding-left: 20px;
    float: inline-end;
}

.what {
    background-color: black;
}

.first {
    margin-top: 20px;
}

.other {
    background-color: rgb(0, 0, 0);
    /* border: 1px sold white; */
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    max-width: 100vw;
    /* min-height: 250px; */
    position: relative;
}

.contact {
    background-color: black;
    width: 100%;
    max-width: 100vw;
    min-height: 250px;
    vertical-align: middle;
    padding: 50px;
    color: white;
    font-size: .5em;
}

.footer {
    background-color: red;
    color: var(--main-text-color);
    display: block;
    width: 100%;
    height: 100%;
    min-height: 100px;
}

.nav-image {
    max-width: 50px;
}

a, a:visited {
    color: white;
    text-decoration: none;

}

a:hover {
    color: rgba(255, 255, 255, 0.5);
    text-decoration: line-through 0.15em rgba(0, 0, 0, .5);
}

.contact h1 {
    padding-bottom: 10px;
    text-align: center;
}

input {
    width: 100%;
    height: 25px;
    border-radius: .7em;
    border-width: .1em;
    margin-bottom: 5px;
}

.message {
    min-height: 100px;
}

@media screen and (max-width: 1000px) {
    .flex-nav {
        flex-direction: column;
    }
}


/* Makes the checkbox invisible and hides it off-page
input[type="checkbox"].toggle {
    opacity: 0;
    position: absolute;
    cursor: pointer;
    left: -9000px;
    top: -9000px;
}

input[type="checkbox"].toggle + label {
    display: none; /* set to Flex */
/* } */

/* input[type="checkbox"].toggle + label::before {
    content: "";
    width: 2em;
    height: 1em;
    background-color: red;
} */

/* Monitors checked state on label */
/* input[type="checkbox"].toggle:checked + label {
    color: red;
}  */
